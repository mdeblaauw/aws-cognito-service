Description: "Authentication Lambda functions for an AWS API gateway"
Parameters:
  ProductionStage:
    Description: Set application stage to dev, test or prod
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
  ApplicationName:
    Description: Name of the application. Should be unique in AWS environment
    Type: String

Transform: AWS::Serverless-2016-10-31

Resources:
  AwsLambdaPowertoolsPythonLayer:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:057560766410:applications/aws-lambda-powertools-python-layer-extras
        # Find latest from github.com/awslabs/aws-lambda-powertools-python/releases
        SemanticVersion: 1.21.1

  CFNUtilityStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../cf_utilities_stack.yaml
      Parameters:
        ProductionStage: !Sub ${ProductionStage}
        ApplicationName: !Sub ${ApplicationName}

  CognitoStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../cognito/cf_cognito_stack.yaml
      Parameters:
        ProductionStage: !Sub ${ProductionStage}
        ApplicationName: !Sub ${ApplicationName}
        CFNResponseLambdaLayer: !GetAtt CFNUtilityStack.Outputs.CFNResponseLambdaLayerName

  LambdaUtilsLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.9
      Content: ../../lambda_layer/auth_utils/

  SignUpLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code: ../../lambda_functions/signup/
      FunctionName: !Sub ${ApplicationName}-signup-${ProductionStage}
      Handler: signup.handler.lambda_handler
      Role: !GetAtt SignUpLambdaRole.Arn
      Runtime: python3.9
      Timeout: 10
      Layers:
        - !Ref LambdaUtilsLayer
        - !GetAtt AwsLambdaPowertoolsPythonLayer.Outputs.LayerVersionArn
      Environment:
        Variables:
          secret_name: !GetAtt CognitoStack.Outputs.UserPoolClientSecretName
          client_id: !GetAtt CognitoStack.Outputs.UserPoolClientId
  
  SignUpLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: !Sub ${ApplicationName}-SignUpLambdaPolicy-${ProductionStage}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              -
                Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: "*"
              -
                Effect: Allow
                Action:
                  - cognito-idp:SignUp
                Resource: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoStack.Outputs.UserPoolId}

Outputs:
  SignUpLambdaArn:
    Value: !GetAtt SignUpLambda.Arn
    Description: Lambda that signs-up users to Cognito